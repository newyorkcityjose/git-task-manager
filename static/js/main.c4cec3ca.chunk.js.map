{"version":3,"sources":["contexts/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuidv4","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Task","useContext","className","onClick","TaskList","length","key","TaskForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4cec3ca.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nexport const TaskListContext = createContext()\r\n\r\nconst TaskListContextProvider = props => {\r\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || []\r\n\r\n  const [tasks, setTasks] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks))\r\n  }, [tasks])\r\n\r\n  const [editItem, setEditItem] = useState(null)\r\n\r\n  // Add tasks\r\n  const addTask = title => {\r\n    setTasks([...tasks, { title, id: uuidv4() }])\r\n  }\r\n\r\n  // Remove tasks\r\n  const removeTask = id => {\r\n    setTasks(tasks.filter(task => task.id !== id))\r\n  }\r\n\r\n  // Clear tasks\r\n  const clearList = () => {\r\n    setTasks([])\r\n  }\r\n\r\n  // Find task\r\n  const findItem = id => {\r\n    const item = tasks.find(task => task.id === id)\r\n\r\n    setEditItem(item)\r\n  }\r\n\r\n  // Edit task\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\r\n\r\n    console.log(newTasks)\r\n\r\n    setTasks(newTasks)\r\n    setEditItem(null)\r\n  }\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  )\r\n}\r\n\r\nexport default TaskListContextProvider","\r\nimport React, { useContext } from 'react'\r\nimport { TaskListContext } from '../contexts/TaskListContext'\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findItem } = useContext(TaskListContext)\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title} </span>\r\n      <div>\r\n        <button\r\n          className=\"btn-delete task-btn\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </button>{' '}\r\n        <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\r\n          <i className=\"fas fa-pen\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Task","\r\nimport React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../contexts/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map(task => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;","import React, { useState, useContext, useEffect } from 'react'\r\nimport { TaskListContext } from '../contexts/TaskListContext'\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\r\n  const [title, setTitle] = useState('')\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (!editItem) {\r\n      addTask(title)\r\n      setTitle('')\r\n    } else {\r\n      editTask(title, editItem.id)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title)\r\n      console.log(editItem)\r\n    } else {\r\n      setTitle('')\r\n    }\r\n  }, [editItem])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Task...\"\r\n        value={title}\r\n        onChange={handleChange}\r\n        required\r\n        className=\"task-input\"\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? 'Edit Task' : 'Add Task'}\r\n        </button>\r\n        <button className=\"btn clear-btn\" onClick={clearList}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n      <h1>Task Manager</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport TaskListContextProvider from \"../contexts/TaskListContext\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nimport \"../App.css\";\r\nimport Header from \"./Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <div className=\"main\">\r\n            <TaskForm />\r\n            <TaskList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}